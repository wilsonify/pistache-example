/**
* Signal Strength
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Strength_output.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

Strength_output::Strength_output()
{
    m_Actual = 0;
    m_ActualIsSet = false;
    m_Expected = 0;
    m_ExpectedIsSet = false;
    m_Strength = 0.0;
    m_StrengthIsSet = false;
    
}

Strength_output::~Strength_output()
{
}

void Strength_output::validate()
{
    // TODO: implement validation
}

void to_json(nlohmann::json& j, const Strength_output& o)
{
    j = nlohmann::json();
    if(o.actualIsSet())
        j["actual"] = o.m_Actual;
    if(o.expectedIsSet())
        j["expected"] = o.m_Expected;
    if(o.strengthIsSet())
        j["strength"] = o.m_Strength;
}

void from_json(const nlohmann::json& j, Strength_output& o)
{
    if(j.find("actual") != j.end())
    {
        j.at("actual").get_to(o.m_Actual);
        o.m_ActualIsSet = true;
    } 
    if(j.find("expected") != j.end())
    {
        j.at("expected").get_to(o.m_Expected);
        o.m_ExpectedIsSet = true;
    } 
    if(j.find("strength") != j.end())
    {
        j.at("strength").get_to(o.m_Strength);
        o.m_StrengthIsSet = true;
    } 
}

int32_t Strength_output::getActual() const
{
    return m_Actual;
}
void Strength_output::setActual(int32_t const value)
{
    m_Actual = value;
    m_ActualIsSet = true;
}
bool Strength_output::actualIsSet() const
{
    return m_ActualIsSet;
}
void Strength_output::unsetActual()
{
    m_ActualIsSet = false;
}
int32_t Strength_output::getExpected() const
{
    return m_Expected;
}
void Strength_output::setExpected(int32_t const value)
{
    m_Expected = value;
    m_ExpectedIsSet = true;
}
bool Strength_output::expectedIsSet() const
{
    return m_ExpectedIsSet;
}
void Strength_output::unsetExpected()
{
    m_ExpectedIsSet = false;
}
double Strength_output::getStrength() const
{
    return m_Strength;
}
void Strength_output::setStrength(double const value)
{
    m_Strength = value;
    m_StrengthIsSet = true;
}
bool Strength_output::strengthIsSet() const
{
    return m_StrengthIsSet;
}
void Strength_output::unsetStrength()
{
    m_StrengthIsSet = false;
}

}
}
}
}

